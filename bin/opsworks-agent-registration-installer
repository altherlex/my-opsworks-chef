#!/bin/bash

OPSWORKS_USERDATA_LOG_DIR='/var/log/aws/opsworks'
OPSWORKS_USERDATA_LOG_FILE="$OPSWORKS_USERDATA_LOG_DIR/user-data.log"

mkdir -p "${OPSWORKS_USERDATA_LOG_DIR}"
touch "${OPSWORKS_USERDATA_LOG_FILE}" && chmod 0600 "${OPSWORKS_USERDATA_LOG_FILE}"

# Move original stderr to fd 3, redirect stdout and stderr to log file
exec 3>&2- &>>"${OPSWORKS_USERDATA_LOG_FILE}"

failure() {
  cat "${OPSWORKS_USERDATA_LOG_FILE}" >&3

  conslog 'Agent installation failed.'
  conslog 'Please verify the log files found under /var/log/aws/opsworks and submit findings to AWS Support.'

  cat <<EOM > /etc/motd.opsworks-static
  Agent installation failed.
  Please verify the log files found under /var/log/aws/opsworks and submit findings to AWS Support.
EOM
  ln -sf /etc/motd.opsworks-static /etc/motd
}

conslog () {
  echo "[$(date --rfc-2822)] opsworks-init: $*" >&2
  echo "[$(date --rfc-2822)] opsworks-init: $*" >&3
}

execute () {
  conslog "Executing:" "$@"
  "$@"
  if [ $? -gt 0 ]
  then
    conslog "Bailing out, failed to execute: $*"
    exit
  fi
}

execute_with_retry () {
  conslog "Executing with retry:" "$@"
  for _ in 1 2; do "$@" && return; sleep 15; done
  conslog "Bailing out, failed to execute: $*"
  exit
}

read_proxy_info () {
  . <(test -r /etc/environment && grep -E "^https?_proxy=" /etc/environment)
  export http_proxy https_proxy
}

is_ubuntu () {
  [ -e '/etc/debian_version' ] && [ 'Ubuntu' == "$(lsb_release -si)" ]
}

is_ubuntu_12_04 () {
  is_ubuntu && [ '12.04' == "$(lsb_release -sr)" ]
}

is_ubuntu_14_04 () {
  is_ubuntu && [ '14.04' == "$(lsb_release -sr)" ]
}

is_debian_family () {
  [ -e '/etc/debian_version' ]
}

is_redhat () {
  [ -e '/etc/redhat-release' ]
}

is_amazon_linux () {
  [ -e '/etc/system-release' ]
}

is_redhat_family () {
  [ -e '/etc/system-release' ] || [ -e '/etc/redhat-release' ]
}

is_supported_os () {
  is_amazon_linux || is_ubuntu_12_04 || is_ubuntu_14_04
}

set -e
trap failure ERR

conslog 'Initializing AWS OpsWorks environment'

read_proxy_info

if is_ubuntu
then
  conslog 'Running on Ubuntu'
elif is_redhat
then
  conslog 'Running on Redhat'
elif is_amazon_linux
then
  conslog 'Running on Amazon Linux'
else
  conslog 'Running on unknown distribution'
fi

conslog 'Checking if OS is supported'
if is_supported_os
then
  conslog 'Running on supported OS'
else
  conslog 'Running on unsupported OS'
  conslog 'Supported OS: Ubuntu 12.04 LTS, Ubuntu 14.04 LTS, Amazon Linux'
  conslog 'https://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-os.html'
  exit 1
fi

conslog 'Setup motd'
cat <<EOM > /etc/motd.opsworks-static
 This instance is managed with AWS OpsWorks.

 The initial instance setup did not yet finish.

 Visit https://aws.amazon.com/opsworks/ for more information.
EOM
execute ln -sf --backup /etc/motd.opsworks-static /etc/motd

if is_redhat_family
then
  conslog 'Installing system packages'
  execute_with_retry yum -y install libicu-devel openssl-devel libxml2-devel libxslt-devel
elif is_debian_family
then
  conslog 'Installing system packages'
  export DEBIAN_FRONTEND=noninteractive
  execute_with_retry dpkg --configure -a
  execute_with_retry apt-get update
  execute_with_retry apt-get install -y libicu-dev libssl-dev libxslt-dev libxml2-dev libyaml-dev
fi

mkdir -p /var/lib/aws/opsworks
cat "$(dirname "$(readlink -f "$0")")/../../preconfig" >/var/lib/aws/opsworks/pre_config.yml

if [ -z "${OPSWORKS_ASSETS_DOWNLOAD_BUCKET}" ]; then
  OPSWORKS_ASSETS_DOWNLOAD_BUCKET='opsworks-instance-assets-us-east-1.s3.amazonaws.com'
  conslog "Setting assets download bucket to default '${OPSWORKS_ASSETS_DOWNLOAD_BUCKET}'."
else
  conslog "Using assets bucket from environment: '${OPSWORKS_ASSETS_DOWNLOAD_BUCKET}'."
fi

# install Ruby
conslog "Installing Ruby for the agent"
execute "$(dirname "$(readlink -f "$0")")/installer_wrapper.sh" -r -R "${OPSWORKS_ASSETS_DOWNLOAD_BUCKET}"

# install development tools
if is_redhat_family
then
  execute yum -y groupinstall "Development tools"
elif is_debian_family
then
  apt-get install -y build-essential
fi

# start registration installer
conslog "Starting the installer"
"$(dirname "$(readlink -f "$0")")/opsworks-agent-registration-installer.rb"
